===================
int literal.
===================

class main {
  var x = 12;
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (integer)
      )
    )
  )
)

===================
int hex literal.
===================

class main {
  var x = 0xFF42;
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (integer)
      )
    )
  )
)

===================
float literal.
===================

class main {
  var x = 4.2;
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (float)
      )
    )
  )
)

===================
float literal with no trailing number.
===================

class main {
  var x = 4.;
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (float)
      )
    )
  )
)

===================
float literal e notation.
===================

class main {
  var x = 4.3e5;
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (float)
      )
    )
  )
)

===================
float literal e notation error (this is not working).
===================

class main {
  var x = 4.3e5e;
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (float)
        (ERROR (identifier))
      )
    )
  )
)

===================
string literal single quote
===================

class main {
  var x = 'hello';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string)
      )
    )
  )
)

===================
string literal single quote with escape sequence
===================

class main {
  var x = 'hello\n';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string (escape_sequence))
      )
    )
  )
)

===================
string literal single quote with escape sequence single quote
===================

class main {
  var x = 'hello\'';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string (escape_sequence))
      )
    )
  )
)

===================
string literal double quote with escape sequence 
===================

class main {
  var x = 'hello\nhello';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string (escape_sequence))
      )
    )
  )
)


===================
string literal double quote
===================

class main {
  var x = "hello";
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string)
      )
    )
  )
)

===================
string literal single quote interpolated identifier
===================

class main {
  var y = 1;
  var x = 'hello $y';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (integer)
      )
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string (interpolation (identifier)))
      )
    )
  )
)

===================
string literal single quote interpolated identifier in braces
===================

class main {
  var y = 1;
  var x = 'hello ${y}';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (integer)
      )
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string (interpolation (identifier)))
      )
    )
  )
)


===================
string literal single quote interpolated expression in braces
===================

class main {
  var y = 1;
  var x = 'hello ${y + 1}';
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (integer)
      )
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (string (interpolation 
          (identifier) (operator) (integer)
        ))
      )
    )
  )
)

===================
Array literal with no elements
===================

class main {
  var y = [];
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (array)
      )
    )
  )
)

===================
Array literal with single element
===================

class main {
  var y = [1];
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (array (integer))
      )
    )
  )
)

===================
Array literal with multiple elements
===================

  var y = [1, 2, 3];

---

(module 
  (variable_declaration 
    (keyword) 
    (identifier) 
    (operator)
    (array (integer) (integer) (integer))
  )
)

===================
Array literal with object element 
===================

  var y = [{x:1}];

---

(module 
  (variable_declaration 
    (keyword) 
    (identifier) 
    (operator)
    (array 
      (object 
      (pair (identifier) (integer)))
    )
  )
)

===================
simple pair literal 
===================

x:1

---

(module 
  (pair (identifier) (integer))
)

===================
simple map pair literal 
===================

"test"=>1

---

(module 
  (pair (string) (integer))
)



===================
Map literal with single element
===================

class main {
  var y = ["string" =>  1];
}

---

(module 
  (class_declaration (keyword) (identifier) 
    (block 
      (variable_declaration 
        (keyword) 
        (identifier) 
        (operator)
        (map (pair (string) (integer)))
      )
    )
  )
)

===================
Map literal with nested 
===================

var y = ["string" =>  ["bar" => 2]];

---

(module 
  (variable_declaration 
    (keyword) 
    (identifier) 
    (operator)
    (map 
      (pair 
        (string)
        (map
          (pair (string) (integer))
        )
      )
    )
  )
)

===================
Object literal 
===================

var y = {x:1, y:2}; 

---

(module 
  (variable_declaration 
    (keyword) 
    (identifier) 
    (operator)
    (object 
      (pair (identifier) (integer))
      (pair (identifier) (integer))
    )
  )
)

